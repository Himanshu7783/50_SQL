1789. Primary Department for Each Employee

Table: Employee

+---------------+---------+
| Column Name   |  Type   |
+---------------+---------+
| employee_id   | int     |
| department_id | int     |
| primary_flag  | varchar |
+---------------+---------+
(employee_id, department_id) is the primary key (combination of columns with unique values) for this table.
employee_id is the id of the employee.
department_id is the id of the department to which the employee belongs.
primary_flag is an ENUM (category) of type ('Y', 'N'). If the flag is 'Y', the department is the primary department for the employee. If the flag is 'N', the department is not the primary.
 

Employees can belong to multiple departments. When the employee joins other departments, they need to decide which department is their primary department. Note that when an employee belongs to only one department, their primary column is 'N'.

Write a solution to report all the employees with their primary department. For employees who belong to one department, report their only department.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Employee table:
+-------------+---------------+--------------+
| employee_id | department_id | primary_flag |
+-------------+---------------+--------------+
| 1           | 1             | N            |
| 2           | 1             | Y            |
| 2           | 2             | N            |
| 3           | 3             | N            |
| 4           | 2             | N            |
| 4           | 3             | Y            |
| 4           | 4             | N            |
+-------------+---------------+--------------+
Output: 
+-------------+---------------+
| employee_id | department_id |
+-------------+---------------+
| 1           | 1             |
| 2           | 1             |
| 3           | 3             |
| 4           | 3             |
+-------------+---------------+
Explanation: 
- The Primary department for employee 1 is 1.
- The Primary department for employee 2 is 1.
- The Primary department for employee 3 is 3.
- The Primary department for employee 4 is 3.

 Solution:
SELECT
    employee_id,
    department_id 
FROM 
    employee 
WHERE 
    primary_flag = "Y" 
GROUP BY 
    employee_id

UNION

SELECT 
    employee_id,
    department_id
FROM 
    (SELECT employee_id, department_id, COUNT(employee_id) 
    FROM employee 
    GROUP BY employee_id 
    HAVING COUNT(employee_id) = 1) AS t1;
Explanation:

SELECT: This function selects the columns that you want to include in the result table.
FROM: This function specifies the tables from which you want to select data.
WHERE: This function filters the data based on a condition. Here, WHERE clause to filter the data to only include employees with a primary department (primary_flag = "Y").
GROUP BY: This function groups the data by the specified columns. In this query, GROUP BY clause to group the data by the employee_id column. This will ensure that each employee is only included once in the result table.
HAVING: This function filters the grouped data based on a condition. In this query, HAVING clause to filter the grouped data to only include employees who belong to one department (COUNT(employee_id) = 1).
UNION: This function combines the results of two queries into a single result table. Here UNION operator to combine the results of the two subqueries.
The first subquery selects all the employees with their primary department (primary_flag = "Y"). The second subquery selects all the employees who belong to one department (COUNT(employee_id) = 1). The UNION operator then combines the results of the two subqueries into a single result table.
